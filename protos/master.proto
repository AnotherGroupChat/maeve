syntax = "proto3";
package Maeve;

// TODO: break this into seperate proto files. This is just a nice and hacky way
// define our schema quickly.

message ScopedState {
  string id = 1;
  string state = 2;
}
message Global {
  string id = 1;
  string state = 2;
}
message State {
  oneof state {
    Global global = 1;
    ScopedState scope = 2; 
  }
  string comment = 3;
}

message Conditional {
  State clause = 1;
  oneof left {
    Conditional left_branch = 2;
    State left_change = 3;
    string left_leaf = 4;
  }
  oneof right {
    Conditional right_branch = 5;
    State right_change = 6;
    string right_leaf = 7;
  } 
}


// An instance of a game to be loaded.
message Game {
  
  // Everything that has an object id, should have a state.
  message ObjectId {
    int32 value = 1;
  }
  message LevelId {
    int32 value = 1; // 0,1,2,3,4,5
  }
  message Stat {
    int32 stat_id = 1; // 0,1,2,3,4,5
    string name = 2; // k/d ratio, health, host or human
    int32 stat_value = 3; // 0-100 or bigger if necessary
  }
  message Action {
    string description = 1; // You swung the hat!
    string name = 2;        // "swing"
    LevelId resultant_level = 3;
  }
  message NPC {
    string name = 1; // Frank the troll.
    repeated Stat stats = 2;
  }

  message Item {
    string name = 1;             // e.g. Sword, hat etc..
    string description = 2;      // e.g. Hard, flacid etc..
    repeated Action actions = 3; // What the Item can do.
  }

  message Level {
    message Entrance {
      string description = 1; // To the left there is a ladder.
      Action action = 2;      // Climbed into the well, flew across the sky.
    }
    string name = 1; // Sweetwater, Ranch, Control Room, Cold Storage
    LevelId id = 2;
    string intro = 3;        // e.g "You entered the room!";
    repeated NPC npcs = 4;   // A troll is in the room.
    repeated Item items = 5; // Items in the room
    repeated Entrance entrance = 6;
  }

  // State variables.
  string name = 1;
  string save_path = 2;
  repeated Level levels = 3;   // Game levels.
  repeated Item inventory = 4; // What you got.
  repeated Stat stats = 5;
}
