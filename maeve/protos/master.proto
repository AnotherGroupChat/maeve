syntax = "proto3";
package Maeve;

// TODO: break this into seperate proto files. This is just a nice and hacky way
// define our schema quickly.

message State {
  repeated string tags = 2;
  float value = 3;
  string comment = 4;
}

// Open to a better name for this.
message Context {
  enum Scope {
    CHARACTER = 0;
    LEVEL = 1;
    ITEM = 2;
    GLOBAL = 3;
  }
  Scope scope = 1;
  string id = 2;
  oneof content {
    string tags = 3;
    float value = 4;
  }
}

message Change {
  enum ChangeType {
    REPLACE = 0;
    ADD = 1;
    REMOVE = 2;
  }
  ChangeType type = 1;
  Context context = 2;
  string comment = 3;
}

message Branch {
  oneof branch {
    Conditional fork = 1;
    Change change = 2;
    string leaf = 3;
  }
}

message Conditional {
  Context clause = 1;
  Branch left = 2;
  Branch right = 3;
}

// An instance of a game to be loaded.
message Game {

  message Action {
    string description = 1; // You swung the hat!
    string resultant_level = 2;
    Conditional conditional = 3;
  }

  message Character {
    string name = 1; // Frank the troll.
    string level = 2;
    map<string, State> stats = 3;
    map<string, Item> inventory= 4; // What you got
    map<string, Action> actions = 5;
  }

  message Item {
    string description = 1; // e.g. Hard, flacid etc..
    map<string, Action> actions = 2; // What the Item can do.
    State state = 3; // e.g. Hard, flacid etc..
  }

  message Level {
    string name = 1; // Sweetwater, Ranch, Control Room, Cold Storage
    string intro = 2; // e.g "You entered the room!";
    State state = 3;
    map<string, Item> items = 4; // Items in the room
    map<string, Action> actions = 5;
  }

  // State variables. Merge 1 and 2 for potentially multithreaded sessions.
  string name = 1;
  Character person = 2;
  string save_path = 3;
  map<string, Level> levels = 4;   // Game levels.
  map<string, State> globals = 5;   // Global variable
}
